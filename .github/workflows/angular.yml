name: Build and Deploy to EC2

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Specify your Node.js version

      - name: Install dependencies
        run: npm install --force

      - name: Build application
        run: npm run build  # Adjust this command as needed

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./dist  # Adjust this to your build output directory

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure this job runs after the build job

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Set up SSH
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" > ~/.ssh/ec2.pem
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/ec2.pem
          # ssh -o StrictHostKeyChecking=no -i ec2.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} <<EOF

      - name: Deploy to EC2
        run: |
          scp -i ~/.ssh/ec2.pem demo/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/usr/share/nginx/html
          # scp -o StrictHostKeyChecking=no -r demo/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/usr/share/nginx/html
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # cd /path/to/deploy
            # Commands to start your application, e.g.:
            # npm install --production
            # pm2 restart your-app-name
            sudo systemctl stop nginx
            sudo systemctl start nginx
            sudo systemctl enable nginx
          EOF
